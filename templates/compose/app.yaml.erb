version: "3.8"

services:
  indexer: &ortelius-app
    build:
      context: ../vendor/ortelius
    command: ["stream", "indexer", "-c", "/opt/config.json"]
    external_links:
      - <%= @config['database']['host'] %>
    depends_on:
      - <%= @config['database']['host'] %>
      - migrate
    volumes:
      - avalanche-ipcs:/tmp
      - ../config/ortelius/config.json:/opt/config.json
    restart: on-failure

  avalanche:
    build:
      context: ../vendor/avalanchego
    restart: always
    depends_on:
      - indexer
    volumes:
      - ../data/avalanche:/var/lib/avalanche
      - ../config/avalanche/config.json:/opt/config.json
      - ../config/avalanche/chain:/opt/avalanchego
      - avalanche-ipcs:/tmp
    labels:
      - "traefik.http.routers.avalanche-<%= @name %>.rule=Host(`rpc.<%= @config['app']['domain'] %>`) && PathPrefix(`/`)"
      - "traefik.http.services.avalanche-<%= @name %>.loadbalancer.server.port=9650"
      - "traefik.enable=true"
      <%- if @config['app']['ssl'] -%>
      - "traefik.http.routers.avalanche-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.avalanche-<%= @name %>.tls=true"
      <%- else -%>
      - "traefik.http.routers.avalanche-<%= @name %>.entrypoints=web"
      <%- end -%>
      - "traefik.http.middlewares.corsHeader.headers.accesscontrolallowmethods=GET,POST,OPTIONS,DELETE,PUT"
      - "traefik.http.middlewares.corsHeader.headers.accesscontrolalloworiginlist=explorer.<%= @config['app']['domain'] %>,api.<%= @config['app']['domain'] %>,wallet.avax.network"
      - "traefik.http.middlewares.corsHeader.headers.addvaryheader=true"
    command: /bin/sh -cx "exec /avalanchego/build/avalanchego --config-file=/opt/config.json --network-id=1"

  api:
    <<: *ortelius-app
    command: ["api", "-c", "/opt/config.json"]
    labels:
      - "traefik.http.routers.explorer-api-<%= @name %>.rule=Host(`api.<%= @config['app']['domain'] %>`) && PathPrefix(`/`)"
      - "traefik.http.services.explorer-api-<%= @name %>.loadbalancer.server.port=8080"
      - "traefik.enable=true"
      <%- if @config['app']['ssl'] -%>
      - "traefik.http.routers.explorer-api-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.explorer-api-<%= @name %>.tls=true"
      <%- else -%>
      - "traefik.http.routers.explorer-api-<%= @name %>.entrypoints=web"
      <%- end -%>
      - "traefik.http.middlewares.corsHeader.headers.accesscontrolallowmethods=GET,POST,OPTIONS,DELETE,PUT"
      - "traefik.http.middlewares.corsHeader.headers.accesscontrolalloworiginlist=explorer.<%= @config['app']['domain'] %>,api.<%= @config['app']['domain'] %>"
      - "traefik.http.middlewares.corsHeader.headers.addvaryheader=true"

  explorer:
    image: <%= @config['images']['explorer'] %>
    restart: always
    labels:
      - "traefik.http.routers.explorer-<%= @name %>.rule=Host(`explorer.<%= @config['app']['domain'] %>`) && PathPrefix(`/`)"
      - "traefik.http.services.explorer-<%= @name %>.loadbalancer.server.port=80"
      - "traefik.enable=true"
      <%- if @config['app']['ssl'] -%>
      - "traefik.http.routers.explorer-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.explorer-<%= @name %>.tls=true"
      <%- else -%>
      - "traefik.http.routers.explorer-<%= @name %>.entrypoints=web"
      <%- end -%>

volumes:
  avalanche-ipcs:
